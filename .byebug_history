exit
ratio.select{|key,value|value.class(Float)}.values
ratio.select{|key,value|value.class==Float}.values
ratio.select{|key,value|value.class=Float}.values
ratio.reject{|key,value|value.class!=Float}.values
ratio.reject{|key,value|value.class!=Float}
ratio.reject{|key,value|value.class!=float}
ratio.reject{|key,value|value==NaN}
ratio.values
ratio
exit
exi
exit
(datein.to_date..dateout.to_date).include?(checkout)
(datein.to_date..dateout.to_date).includes?(checkout)
range(datein.to_date..dateout.to_date).includes?(checkout)
exit
openings
exit
listings
openings
continue
[datein.to_date, checkin].max < [dateout.to_date, checkout].min
listings
exit
continue
exit
[datein.to_date, checkin].max
x.max
x=[1,2]
max([x,y])
y=2
y=y
x=1
max([1,2])
exit
max(1,2)
max(datein.to_date,checkin)
continue
checkin.class
exit
datein.to_date
datein.class
checkin.month
checkin.year
checkin.class
checkin
datein
exit
eixt
